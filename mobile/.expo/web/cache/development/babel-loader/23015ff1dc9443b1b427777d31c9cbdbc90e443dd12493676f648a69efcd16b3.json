{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useCallback } from 'react';\nimport { AuthContextProvider } from \"./src/contexts/AuthContext\";\nimport { useFonts, Montserrat_300Light, Montserrat_600SemiBold, Montserrat_400Regular } from '@expo-google-fonts/montserrat';\nimport { ThemeProvider } from 'styled-components/native';\nimport theme from \"./src/global/styles/theme\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Routes } from \"./src/routes/Routes\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      Montserrat_300Light: Montserrat_300Light,\n      Montserrat_600SemiBold: Montserrat_600SemiBold,\n      Montserrat_400Regular: Montserrat_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n            case 3:\n              _context.next = 8;\n              break;\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    }\n    prepare();\n  }, []);\n  var onLayoutRootView = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!fontsLoaded) {\n              _context2.next = 3;\n              break;\n            }\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(ThemeProvider, {\n    theme: theme,\n    children: [_jsx(KeyboardAvoidingView, {\n      onLayout: onLayoutRootView\n    }), _jsx(GestureHandlerRootView, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(AuthContextProvider, {\n        children: _jsx(Routes, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useCallback","AuthContextProvider","useFonts","Montserrat_300Light","Montserrat_600SemiBold","Montserrat_400Regular","ThemeProvider","theme","SplashScreen","Routes","KeyboardAvoidingView","GestureHandlerRootView","jsx","_jsx","jsxs","_jsxs","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","prepare","_regeneratorRuntime","async","prepare$","_context","prev","next","awrap","preventAutoHideAsync","t0","console","log","stop","Promise","onLayoutRootView","_callee","_callee$","_context2","hideAsync","children","onLayout","style","flex"],"sources":["C:/Users/Guilherme/Documents/MakeYourGO/mobile/App.tsx"],"sourcesContent":["/* eslint-disable camelcase */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useCallback } from 'react';\r\n\r\nimport { AuthContextProvider } from './src/contexts/AuthContext';\r\n\r\nimport {\r\n  useFonts,\r\n  Montserrat_300Light,\r\n  Montserrat_600SemiBold,\r\n  Montserrat_400Regular\r\n} from '@expo-google-fonts/montserrat';\r\n\r\nimport { ThemeProvider } from 'styled-components/native';\r\n\r\nimport theme from './src/global/styles/theme';\r\n\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nimport { Routes } from './src/routes/Routes';\r\nimport { KeyboardAvoidingView } from 'react-native';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\n\r\nexport default function App() {\r\n  const [fontsLoaded] = useFonts({\r\n    Montserrat_300Light,\r\n    Montserrat_600SemiBold,\r\n    Montserrat_400Regular\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        await SplashScreen.preventAutoHideAsync();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    prepare();\r\n  }, []);\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontsLoaded) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [fontsLoaded]);\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <KeyboardAvoidingView onLayout={onLayoutRootView} />\r\n      <GestureHandlerRootView style={{ flex: 1 }}>\r\n        <AuthContextProvider>\r\n          <Routes />\r\n        </AuthContextProvider>\r\n      </GestureHandlerRootView>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAErD,SAASC,mBAAmB;AAE5B,SACEC,QAAQ,EACRC,mBAAmB,EACnBC,sBAAsB,EACtBC,qBAAqB,QAChB,+BAA+B;AAEtC,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAOC,KAAK;AAEZ,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAElD,SAASC,MAAM;AAA8B,OAAAC,oBAAA;AAE7C,SAASC,sBAAsB,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBf,QAAQ,CAAC;MAC7BC,mBAAmB,EAAnBA,mBAAmB;MACnBC,sBAAsB,EAAtBA,sBAAsB;MACtBC,qBAAqB,EAArBA;IACF,CAAC,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAJKG,WAAW,GAAAF,UAAA;EAMlBnB,SAAS,CAAC,YAAM;IACd,SAAesB,OAAOA,CAAA;MAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAAAL,mBAAA,CAAAM,KAAA,CAEZpB,YAAY,CAACqB,oBAAoB,EAAE;YAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;cAEzCM,OAAO,CAACC,GAAG,CAAAP,QAAA,CAAAK,EAAA,CAAO;YAAC;YAAA;cAAA,OAAAL,QAAA,CAAAQ,IAAA;UAAA;QAAA;MAAA,yBAAAC,OAAA;IAAA;IAGvBb,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMc,gBAAgB,GAAGnC,WAAW,CAAC,SAAAoC,QAAA;IAAA,OAAAd,mBAAA,CAAAC,KAAA,UAAAc,SAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;UAAA;YAAA,KAC/BP,WAAW;cAAAkB,SAAA,CAAAX,IAAA;cAAA;YAAA;YAAAW,SAAA,CAAAX,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACPpB,YAAY,CAAC+B,SAAS,EAAE;UAAA;UAAA;YAAA,OAAAD,SAAA,CAAAL,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CAEjC,EAAE,CAACd,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEL,KAAA,CAACT,aAAa;IAACC,KAAK,EAAEA,KAAM;IAAAiC,QAAA,GAC1B3B,IAAA,CAACH,oBAAoB;MAAC+B,QAAQ,EAAEN;IAAiB,EAAG,EACpDtB,IAAA,CAACF,sBAAsB;MAAC+B,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MAAAH,QAAA,EACzC3B,IAAA,CAACZ,mBAAmB;QAAAuC,QAAA,EAClB3B,IAAA,CAACJ,MAAM;MAAG;IACU,EACC;EAAA,EACX;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}