{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"navegator\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { Container, Touch, Title } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Button(_ref) {\n  var title = _ref.title,\n    navegator = _ref.navegator,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(Container, {\n    children: _jsx(Touch, _objectSpread(_objectSpread({\n      onPress: function onPress() {\n        return navegator && navegator();\n      }\n    }, rest), {}, {\n      children: _jsx(Title, {\n        children: title\n      })\n    }))\n  });\n}","map":{"version":3,"names":["React","Container","Touch","Title","jsx","_jsx","Button","_ref","title","navegator","rest","_objectWithoutProperties","_excluded","children","_objectSpread","onPress"],"sources":["C:/Users/Guilherme/Documents/MakeYourGO/mobile/src/components/Button/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { TouchableOpacityProps } from 'react-native';\r\n\r\nimport { Container, Touch, Title } from './styles';\r\n\r\ninterface ButtonProps extends TouchableOpacityProps {\r\n  title: string;\r\n  navegator?: () => void;\r\n}\r\n\r\nexport function Button({ title, navegator, ...rest }: ButtonProps) {\r\n  return (\r\n    <Container>\r\n      <Touch onPress={() => navegator && navegator()} {...rest}>\r\n        <Title>{title}</Title>\r\n      </Touch>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,SAAS,EAAEC,KAAK,EAAEC,KAAK;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAOnD,OAAO,SAASC,MAAMA,CAAAC,IAAA,EAA6C;EAAA,IAA1CC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAKC,IAAI,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EAChD,OACEP,IAAA,CAACJ,SAAS;IAAAY,QAAA,EACRR,IAAA,CAACH,KAAK,EAAAY,aAAA,CAAAA,aAAA;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,SAAS,IAAIA,SAAS,EAAE;MAAA;IAAC,GAAKC,IAAI;MAAAG,QAAA,EACtDR,IAAA,CAACF,KAAK;QAAAU,QAAA,EAAEL;MAAK;IAAS;EAChB,EACE;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}